export enum LangId {
  CPP = 'g++',
  CPP11 = 'g++11',
  CPP14 = 'g++14',
  CPP17 = 'g++17',
  GCC = 'gcc',
  FPC = 'fpc',
  PY2 = 'python2.7',
  PY3 = 'python3.8',
  JAVA = 'java8',
  HTML = 'html',
  PLAIN = 'plain',
}
import { bbedit } from '@uiw/codemirror-theme-bbedit';
import { eclipse } from '@uiw/codemirror-theme-eclipse';
import { okaidia } from '@uiw/codemirror-theme-okaidia';
import { vscodeDark } from '@uiw/codemirror-theme-vscode';
export enum Language {
  CPP = 'cpp',
  JAVA = 'java',
  PYTHON = 'python',
}
export enum Theme {
  LIGHT = 'light',
  DARK = 'dark',
  BBEDIT = 'bbedit',
  ECLIPSE = 'eclipse',
  OKAIDIA = 'okaidia',
  VSCODE = 'vscodeDark',
}
/**
 * C++语言关键词和函数提示
 */
export const cppCompleteOptions = [
  { label: 'auto', type: 'keyword' },
  { label: 'break', type: 'keyword' },
  { label: 'case', type: 'keyword' },
  { label: 'char', type: 'keyword' },
  { label: 'class', type: 'keyword' },
  { label: 'const', type: 'keyword' },
  { label: 'continue', type: 'keyword' },
  { label: 'default', type: 'keyword' },
  { label: 'delete', type: 'keyword' },
  { label: 'do', type: 'keyword' },
  { label: 'double', type: 'keyword' },
  { label: 'else', type: 'keyword' },
  { label: 'enum', type: 'keyword' },
  { label: 'explicit', type: 'keyword' },
  { label: 'extern', type: 'keyword' },
  { label: 'float', type: 'keyword' },
  { label: 'for', type: 'keyword' },
  { label: 'friend', type: 'keyword' },
  { label: 'goto', type: 'keyword' },
  { label: '#include', type: 'keyword' },
  { label: 'if', type: 'keyword' },
  { label: 'inline', type: 'keyword' },
  { label: 'int', type: 'keyword' },
  { label: 'long', type: 'keyword' },
  { label: 'namespace', type: 'keyword' },
  { label: 'new', type: 'keyword' },
  { label: 'operator', type: 'keyword' },
  { label: 'private', type: 'keyword' },
  { label: 'protected', type: 'keyword' },
  { label: 'public', type: 'keyword' },
  { label: 'register', type: 'keyword' },
  { label: 'return', type: 'keyword' },
  { label: 'short', type: 'keyword' },
  { label: 'signed', type: 'keyword' },
  { label: 'sizeof', type: 'keyword' },
  { label: 'static', type: 'keyword' },
  { label: 'struct', type: 'keyword' },
  { label: 'switch', type: 'keyword' },
  { label: 'template', type: 'keyword' },
  { label: 'this', type: 'keyword' },
  { label: 'throw', type: 'keyword' },
  { label: 'try', type: 'keyword' },
  { label: 'typedef', type: 'keyword' },
  { label: 'typeid', type: 'keyword' },
  { label: 'typename', type: 'keyword' },
  { label: 'union', type: 'keyword' },
  { label: 'unsigned', type: 'keyword' },
  { label: 'using', type: 'keyword' },
  { label: 'virtual', type: 'keyword' },
  { label: 'void', type: 'keyword' },
  { label: 'volatile', type: 'keyword' },
  { label: 'while', type: 'keyword' },
  { label: 'cout', type: 'function' },
  { label: 'cin', type: 'function' },
  { label: 'cerr', type: 'function' },
  { label: 'endl', type: 'function' },
  { label: 'malloc', type: 'function' },
  { label: 'free', type: 'function' },
  { label: 'printf', type: 'function' },
  { label: 'scanf', type: 'function' },
  { label: 'strcpy', type: 'function' },
  { label: 'strcat', type: 'function' },
  { label: 'strcmp', type: 'function' },
  { label: 'strlen', type: 'function' },
  { label: 'std', type: 'function' },
  { label: 'vector', type: 'function' },
  { label: 'string', type: 'function' },
];
/**
 * python语言关键词和函数提示
 */
export const pythonCompleteOptions = [
  { label: 'False', type: 'keyword' },
  { label: 'None', type: 'keyword' },
  { label: 'True', type: 'keyword' },
  { label: 'and', type: 'keyword' },
  { label: 'as', type: 'keyword' },
  { label: 'assert', type: 'keyword' },
  { label: 'break', type: 'keyword' },
  { label: 'class', type: 'keyword' },
  { label: 'continue', type: 'keyword' },
  { label: 'def', type: 'keyword' },
  { label: 'del', type: 'keyword' },
  { label: 'elif', type: 'keyword' },
  { label: 'else', type: 'keyword' },
  { label: 'except', type: 'keyword' },
  { label: 'finally', type: 'keyword' },
  { label: 'for', type: 'keyword' },
  { label: 'from', type: 'keyword' },
  { label: 'global', type: 'keyword' },
  { label: 'if', type: 'keyword' },
  { label: 'import', type: 'keyword' },
  { label: 'in', type: 'keyword' },
  { label: 'is', type: 'keyword' },
  { label: 'lambda', type: 'keyword' },
  { label: 'nonlocal', type: 'keyword' },
  { label: 'not', type: 'keyword' },
  { label: 'or', type: 'keyword' },
  { label: 'pass', type: 'keyword' },
  { label: 'raise', type: 'keyword' },
  { label: 'return', type: 'keyword' },
  { label: 'try', type: 'keyword' },
  { label: 'while', type: 'keyword' },
  { label: 'with', type: 'keyword' },
  { label: 'yield', type: 'keyword' },
  { label: 'print', type: 'function' },
  { label: 'input', type: 'function' },
  { label: 'len', type: 'function' },
  { label: 'range', type: 'function' },
  { label: 'open', type: 'function' },
  { label: 'str', type: 'function' },
  { label: 'int', type: 'function' },
  { label: 'float', type: 'function' },
  { label: 'list', type: 'function' },
  { label: 'tuple', type: 'function' },
  { label: 'dict', type: 'function' },
  { label: 'set', type: 'function' },
  { label: 'sorted', type: 'function' },
  { label: 'sum', type: 'function' },
  { label: 'max', type: 'function' },
  { label: 'min', type: 'function' },
  { label: 'abs', type: 'function' },
  { label: 'round', type: 'function' },
  { label: 'type', type: 'function' },
  { label: 'help', type: 'function' },
];
/**
 * java语言关键词和函数提示
 */
export const javaCompleteOptions = [
  { label: 'abstract', type: 'keyword' },
  { label: 'assert', type: 'keyword' },
  { label: 'boolean', type: 'keyword' },
  { label: 'break', type: 'keyword' },
  { label: 'byte', type: 'keyword' },
  { label: 'case', type: 'keyword' },
  { label: 'catch', type: 'keyword' },
  { label: 'char', type: 'keyword' },
  { label: 'class', type: 'keyword' },
  { label: 'const', type: 'keyword' },
  { label: 'continue', type: 'keyword' },
  { label: 'default', type: 'keyword' },
  { label: 'do', type: 'keyword' },
  { label: 'double', type: 'keyword' },
  { label: 'else', type: 'keyword' },
  { label: 'enum', type: 'keyword' },
  { label: 'extends', type: 'keyword' },
  { label: 'final', type: 'keyword' },
  { label: 'finally', type: 'keyword' },
  { label: 'float', type: 'keyword' },
  { label: 'for', type: 'keyword' },
  { label: 'if', type: 'keyword' },
  { label: 'implements', type: 'keyword' },
  { label: 'import', type: 'keyword' },
  { label: 'instanceof', type: 'keyword' },
  { label: 'int', type: 'keyword' },
  { label: 'interface', type: 'keyword' },
  { label: 'long', type: 'keyword' },
  { label: 'native', type: 'keyword' },
  { label: 'new', type: 'keyword' },
  { label: 'package', type: 'keyword' },
  { label: 'private', type: 'keyword' },
  { label: 'protected', type: 'keyword' },
  { label: 'public', type: 'keyword' },
  { label: 'return', type: 'keyword' },
  { label: 'short', type: 'keyword' },
  { label: 'static', type: 'keyword' },
  { label: 'strictfp', type: 'keyword' },
  { label: 'super', type: 'keyword' },
  { label: 'switch', type: 'keyword' },
  { label: 'synchronized', type: 'keyword' },
  { label: 'this', type: 'keyword' },
  { label: 'throw', type: 'keyword' },
  { label: 'throws', type: 'keyword' },
  { label: 'transient', type: 'keyword' },
  { label: 'try', type: 'keyword' },
  { label: 'void', type: 'keyword' },
  { label: 'volatile', type: 'keyword' },
  { label: 'while', type: 'keyword' },
  { label: 'System.out.println', type: 'function' },
  { label: 'System.in', type: 'function' },
  { label: 'System.err', type: 'function' },
  { label: 'Math.abs', type: 'function' },
  { label: 'Math.ceil', type: 'function' },
  { label: 'Math.floor', type: 'function' },
  { label: 'Math.max', type: 'function' },
  { label: 'Math.min', type: 'function' },
  { label: 'Math.pow', type: 'function' },
  { label: 'Math.random', type: 'function' },
  { label: 'Math.round', type: 'function' },
  { label: 'Math.sqrt', type: 'function' },
  { label: 'String.length', type: 'function' },
  { label: 'String.charAt', type: 'function' },
  { label: 'String.concat', type: 'function' },
  { label: 'String.equalsIgnoreCase', type: 'function' },
  { label: 'String.indexOf', type: 'function' },
  { label: 'String.substring', type: 'function' },
  { label: 'String.trim', type: 'function' },
  { label: 'Integer.parseInt', type: 'function' },
  { label: 'Integer.toString', type: 'function' },
  { label: 'Double.parseDouble', type: 'function' },
  { label: 'Double.toString', type: 'function' },
  { label: 'Character.isLetter', type: 'function' },
  { label: 'Character.isDigit', type: 'function' },
  { label: 'Character.isWhitespace', type: 'function' },
];

/**
 * 语言关键词提示对应表
 */
export const langCompleteOptionsMap = {
  [Language.CPP]: cppCompleteOptions,
  [Language.PYTHON]: pythonCompleteOptions,
  [Language.JAVA]: javaCompleteOptions,
};
/**
 * 主题对应表
 */
export const themeMap = {
  [Theme.LIGHT]: 'light' as const,
  [Theme.DARK]: 'dark' as const,
  [Theme.BBEDIT]: bbedit,
  [Theme.ECLIPSE]: eclipse,
  [Theme.OKAIDIA]: okaidia,
  [Theme.VSCODE]: vscodeDark,
};
